version: 2
jobs:
  pr_check:
    docker:
      - image: circleci/node:10.16.3
      - image: circleci/mysql:5.7.28
        environment:
          MYSQL_ROOT_PASSWORD: Welcome@123
          MYSQL_DATABASE: Users
          MYSQL_USER: user
          MYSQL_PASSWORD: passw0rd
    steps:
      - checkout
      - run: # https://circleci.com/docs/2.0/postgres-config/#example-mysql-project
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - run:
          name: install-npm-modules
          command: npm install
      - run:
          name: test
          command: npm test
  build:
    docker:
      - image: circleci/node:10.16.3
      - image: circleci/mysql:5.7.28
        environment:
          MYSQL_ROOT_PASSWORD: Welcome@123
          MYSQL_DATABASE: Users
          MYSQL_USER: user
          MYSQL_PASSWORD: passw0rd
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get install unzip
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
      - run:
          name: AWS configure
          command: |
            aws configure list
      - run: # https://circleci.com/docs/2.0/postgres-config/#example-mysql-project
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - run:
          name: install-npm-modules
          command: npm install
      - run:
          name: test
          command: npm test
      - run:
          name: Push Deployment
          command: |
            aws deploy push \
            --application-name csye6225-webapp \
            --description "Code deploy Webapp" \
            --ignore-hidden-files \
            --s3-location s3://codedeploy.vishakavarma.com/webapp.zip \
            --source .
      - run:
          name: Create Deployment
          command: |
            aws deploy create-deployment \
            --application-name csye6225-webapp \
            --s3-location bucket=codedeploy.vishakavarma.com,key=webapp.zip,bundleType=zip \
            --deployment-group-name csye6225-webapp-deployment \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --description "Code deploy Test"
      

workflows:
  version: 2

  pr-check:
    jobs:
      - pr_check

  build_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - a7
